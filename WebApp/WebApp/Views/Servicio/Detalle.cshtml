@model WebApp.Models.Servicio

@{
    ViewData["Title"] = "Detalle";
}

@*<div class="text-center">*@
<div>
    <h1 class="display-5" style="color:blue"><i class="fa fa-eye"></i> Detalle Servicio</h1>
</div>
@using (Html.BeginForm("Editar", "Servicio", Model.Servicio_Id, FormMethod.Get))
{

    <div class="form-group">
        <div class="form-row">
            <div class="col">
                @Html.LabelFor(x => Model.Campus_Id, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.DropDownListFor(x => Model.Campus_Id, new SelectList(Model.CampusList, "Value", "Text"), "--Seleccionar Campus--", htmlAttributes: new { @class = "form-control", id = "Campus", autofocus = "autofocus", required = "required", disabled = "disabled" })
                @Html.ValidationMessageFor(x => x.Campus_Id, "", new { @class = "text-danger" })
            </div>
            <div class="col">
                @Html.LabelFor(x => Model.Facultad_Id, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.DropDownListFor(x => Model.Facultad_Id, new SelectList(Model.FacultadList, "Value", "Text"), "--Seleccionar Facultad--", htmlAttributes: new { @class = "form-control", id = "Facultad", required = "required", disabled = "disabled" })
                @Html.ValidationMessageFor(x => x.Facultad_Id, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="form-row">
            <div class="col">
                @Html.LabelFor(x => Model.Escuela_Id, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.DropDownListFor(x => Model.Escuela_Id, new SelectList(Model.EscuelaList, "Value", "Text"), "--Seleccionar Escuela--", htmlAttributes: new { @class = "form-control", id = "Escuela", required = "required", disabled = "disabled" })
                @Html.ValidationMessageFor(x => x.Escuela_Id, "", new { @class = "text-danger" })
            </div>

            <div class="col">
                @Html.LabelFor(x => Model.Carrera_Id, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.DropDownListFor(x => Model.Carrera_Id, new SelectList(Model.CarreraList, "Value", "Text"), "--Seleccionar Carrera--", htmlAttributes: new { @class = "form-control", id = "Carrera", required = "required", disabled = "disabled" })
                @Html.ValidationMessageFor(x => x.Carrera_Id, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="form-row">

            @Html.LabelFor(x => Model.TipoServicio_Id, htmlAttributes: new { @class = "control-label col-md-2" })

            @Html.DropDownListFor(x => Model.TipoServicio_Id, new SelectList(Model.TipoServicioList, "Value", "Text"), "--Seleccionar Tipo de Servicio--", htmlAttributes: new { @class = "form-control", id = "TipoServicio", required = "required", disabled = "disabled" })
            @Html.ValidationMessageFor(x => x.TipoServicio_Id, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(x => Model.Servicio_Codigo, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.TextBoxFor(x => x.Servicio_Codigo, new { @class = "form-control", required = "required", disabled = "disabled" })
                @Html.ValidationMessageFor(x => x.Servicio_Codigo, "", new { @class = "text-danger" })
            </div>

            <div class="col">
                @Html.LabelFor(x => Model.Servicio_Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.TextBoxFor(x => x.Servicio_Descripcion, new { @class = "form-control", required = "required", disabled = "disabled" })
                @Html.ValidationMessageFor(x => x.Servicio_Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            @*<div class="col-md-5">
                    @Html.LabelFor(x => Model.Servicio_FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.TextBoxFor(x => x.Servicio_FechaInicio, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Servicio_FechaInicio, "", new { @class = "text-danger" })
                </div>*@

            @*<div class="form-group row">*@
            @* <label class="col-2 col-form-label" for="emplFechaIng">Fecha Inicio</label>*@
            @*<label>Fecha Inicio</label>*@
            <!--div class="col-8"-->
            <div class="col-sm-3">
                @Html.LabelFor(x => Model.Servicio_FechaInicio, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="input-group">

                    @Html.TextBoxFor(x => x.Servicio_FechaInicio, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", placeholder = "Fecha Ingreso", required = "required", disabled = "disabled" })
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <i class="fa fa-calendar"></i>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(x => x.Servicio_FechaInicio, null, new { @class = "text-danger" })
                    <div class="valid-feedback">Valido.</div>
                    <div class="invalid-feedback">Fecha Invalida.</div>
                    @*@Html.DisplayFor(x => x.Servicio_FechaInicio, "{0:MMM yyyy}", new { @class = "form-control", type = "date", placeholder = "Fecha Ingreso", required = "required", disabled = "disabled" })*@
                </div>
            </div>
            @* </div> *@
            <div class="col-md-3">
                @Html.LabelFor(x => Model.Servicio_FechaCierre, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="input-group">
                    @*@Html.TextBoxFor(x => x.Servicio_FechaCierre, new { @class = "form-control" })*@
                    @Html.TextBoxFor(model => model.Servicio_FechaCierre, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", disabled = "disabled" })
                    <div class="input-group-append">
                        <div class="input-group-text">
                            <i class="fa fa-calendar"></i>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(x => x.Servicio_FechaCierre, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                @Html.LabelFor(x => Model.Usuario_Codigo, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.DropDownListFor(x => Model.Usuario_Codigo, new SelectList(Model.UsuarioList, "Value", "Text"), "--Seleccionar Coodinador--", htmlAttributes: new { @class = "form-control", id = "Coordinador", required = "required", disabled = "disabled" })
                @Html.ValidationMessageFor(x => x.Usuario_Codigo, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    @*<div class="form-group">
            <div class="row">

                <div class="col">
                    @Html.EditorFor(model => model.Servicio_FechaCierre, new { id = "Fecha1", @type = "date", Value = Model.Servicio_FechaCierre, @class = "form-control date-picker-needed" })
                </div>
                <div class="col">
                    @Html.EditorFor(model => model.Servicio_FechaCierre, new { id = "Fecha2", @type = "date", Value = Model.Servicio_FechaCierre.Value.ToShortDateString(), @class = "form-control" })
                </div>
                <div class="col">
                    @Html.EditorFor(model => model.Servicio_FechaCierre, new { id = "Fecha3", @type = "date", Value = Model.Servicio_FechaCierre.Value.ToShortDateString(), @class = "form-control date-picker-needed" })
                </div>

                @Html.EditorFor(m => m.Servicio_FechaInicio, new { @id = "your-id", @type = "date", @class = "datepicker form-control input-datepicker", placeholder = "dd/mm/yyyy", data_date_format = "dd/mm/yyyy" })

                @Html.EditorFor(model => model.Servicio_FechaInicio, new { @class = "Filtros form-control input-sm", type = "date" })

                @Html.EditorFor(model => model.Servicio_FechaCierre, "{0:yyyy-MM-dd}", new { @class = "form-control date-picker-needed", @type = "date", disabled = "disabled" })

                @Html.EditorFor(model => model.Servicio_FechaCierre, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", Value = Model.Servicio_FechaCierre.Value.ToShortDateString(), disabled = "disabled" })

                @Html.EditorFor(model => model.Servicio_FechaCierre, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker", @type = "date", Value = String.Format("{0:dd/MM/yyyy}", Model.Servicio_FechaCierre.Value.ToShortDateString().ToString()), disabled = "disabled" })

                @Html.EditorFor(model => model.Servicio_FechaCierre, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker input-datepicker", @type = "date", disabled = "disabled", data_date_format = "dd/mm/yyyy" })

                @Html.EditorFor(model => model.Servicio_FechaCierre, "{0:yyyy-MM-dd}", new { @class = "form-control datepicker input-datepicker", @type = "date", disabled = "disabled", data_date_format = "dd/mm/yyyy" })

            </div>
        </div>
        <div class="input-group">

            @Html.TextBoxFor(x => x.Servicio_FechaInicio, @"{0:yyyy\/MM\/dd}", new { @class = "form-control datepicker", type = "date", placeholder = "Fecha Ingreso", required = "required", disabled = "disabled" })
            <div class="input-group-append">
                <div class="input-group-text">
                    <i class="fa fa-calendar"></i>
                </div>
            </div>

            @Html.ValidationMessageFor(x => x.Servicio_FechaInicio, null, new { @class = "text-danger" })
            <div class="valid-feedback">Valido.</div>
            <div class="invalid-feedback">Fecha Invalida.</div>
        </div>*@
    <div class="form-group">
        <div class="row">
            @*<div class="form-group row">*@
            @*<label for="emplSueldo" class="col-2 col-form-label">Sueldo</label>*@
            @*<label>Costo</label>*@
            <!--div class="col-8"-->
            <div class="col-3">
                @Html.LabelFor(x => Model.Servicio_Costo, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text">
                            <i class="fa fa-money"></i>
                            <span>RD$</span>
                        </div>
                    </div>
                    @Html.TextBoxFor(x => x.Servicio_Costo, new { @class = "form-control", placeholder = "Costo", required = "required", disabled = "disabled" })
                    @Html.ValidationMessageFor(x => x.Servicio_Costo, null, new { @class = "text-danger" })
                    <div class="invalid-feedback">Costo Requerido.</div>
                </div>
            </div>
            <div class="col-3">
                @Html.LabelFor(x => Model.Estado_Id, htmlAttributes: new { @class = "control-label col-md-2" })

                @Html.DropDownListFor(x => Model.Estado_Id, new SelectList(Model.EstadoList, "Value", "Text"), "--Seleccionar Estado de Servicio--", htmlAttributes: new { @class = "form-control", id = "Estado", disabled = "disabled" })
                @Html.ValidationMessageFor(x => x.Estado_Id, "", new { @class = "text-danger" })
            </div>
            @*</div>*@
        </div>

    </div>

    <br />

    <div class="form-group">
        <div class="row text-center">
            @*<div class="offset-4 col-8">*@
            <div class="col">
                @*<div class="col-sm-9 offset-sm-3">*@

                @if (Model.Estado_Id == "C")
                {
                    @*<button id="btnSumit" type="submit" class="btn btn-primary" value="Editar" name="action" disabled = "disabled"><i class="fa fa-save"></i> Editar</button>*@
                }
                else
                {
                    <a href="/Servicio/Editar/@Model.Servicio_Id" class="btn btn-primary alert-link"><i class="fa fa-edit"></i> Editar</a>
                }
                <span>               </span>
                @*<button id="btnSumit" type="submit" class="btn btn-primary" value="Editar" name="action"><i class="fa fa-edit"></i> Editar</button>*@

                <a href="/Servicio/Index" class="btn btn-info alert-link"><i class="fa fa-list"></i> Listado</a>


                @*<button class="btn btn-danger" type="submit" value="listado" name="action"><i class="fa fa-list"></i> Listado</button>*@
                @*</div>*@
            </div>

        </div>
    </div>


} @*Fin Formulario*@

@section Scripts{

    @*<script>
            $(document).ready(function () {

                $('#Campus').change(function () {
                    var selectedCampus = $("#Campus").val();
                    var FacultadSelect = $('#Facultad');

                    //FacultadSelect.empty();

                    //FacultadSelect.append($('<option/>', {
                    //    value: null,
                    //    text: "--Seleccionar Facultad--"
                    //}));

                    LimpiarDropDownList("Campus");

                    if (selectedCampus != null && selectedCampus != '') {
                        $.getJSON('@Url.Action("GetFacultades")', { campusId: selectedCampus }, function (facultades) {
                            //console.log(facultades);

                            if (facultades != null && !jQuery.isEmptyObject(facultades))
                                {

                                $.each(facultades, function (index, facultad) {

                                    FacultadSelect.append($('<option/>', {
                                        value: facultad.value,
                                        text: facultad.text
                                    }));
                                });
                            };
                        });
                    }
                });

                $('#Facultad').change(function () {
                    var selectedCampus = $("#Campus").val();
                    var selectedFacultad = $("#Facultad").val();
                    var escuelaSelect = $('#Escuela');

                    //escuelaSelect.empty();

                    //escuelaSelect.append($('<option/>', {
                    //    value: null,
                    //    text: "--Seleccionar Escuela--"
                    //}));

                    LimpiarDropDownList("Facultad");

                    if (selectedFacultad != null && selectedFacultad != '') {
                        $.getJSON('@Url.Action("GetEscuelas")', { campusId: selectedCampus, facultadId: selectedFacultad }, function (escuelas) {

                            if (escuelas != null && !jQuery.isEmptyObject(escuelas))
                                {

                                $.each(escuelas, function (index, escuela) {

                                        escuelaSelect.append($('<option/>', {
                                            value: escuela.value,
                                            text: escuela.text
                                        }));
                                });
                            };
                        });
                    }
                });

                $('#Escuela').change(function () {
                    var selectedCampus = $("#Campus").val();
                    var selectedFacultad = $("#Facultad").val();
                    var selectEscuela = $('#Escuela').val();
                    var carreraSelect = $('#Carrera');

                    //carreraSelect.empty();

                    //carreraSelect.append($('<option/>', {
                    //    value: null,
                    //    text: "--Seleccionar Carrera--"
                    //}));
                    LimpiarDropDownList("Escuela");

                    if (selectEscuela != null && selectEscuela != '') {
                        $.getJSON('@Url.Action("GetCarreras")', { campusId: selectedCampus, facultadId: selectedFacultad, escuelaId: selectEscuela }, function (carreras) {

                            if (carreras != null && !jQuery.isEmptyObject(carreras))
                                {

                                $.each(carreras, function (index, carrera) {

                                    carreraSelect.append($('<option/>', {
                                        value: carrera.value,
                                        text: carrera.text
                                    }));
                                });
                            };
                        });
                    }
                });
            });

            function LimpiarDropDownList(Caso) {
                if (Caso == "Escuela" || Caso == "Facultad" || Caso == "Campus") {
                    var carreraSelect = $('#Carrera');
                    carreraSelect.empty();

                    carreraSelect.append($('<option/>', {
                        value: null,
                        text: "--Seleccionar Carrera--"
                    }));
                }
                if (Caso == "Facultad" || Caso == "Campus") {
                    var escuelaSelect = $('#Escuela');

                    escuelaSelect.empty();

                    escuelaSelect.append($('<option/>', {
                        value: null,
                        text: "--Seleccionar Escuela--"
                    }));
                }

                if (Caso == "Campus") {
                    var FacultadSelect = $('#Facultad');
                    FacultadSelect.empty();

                    FacultadSelect.append($('<option/>', {
                        value: null,
                        text: "--Seleccionar Facultad--"
                    }));
                }
            }
        </script>*@
}
